{"ast":null,"code":"var _jsxFileName = \"/Users/hvx/Desktop/wyncode/posted/client/src/components/post/Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport ViewItem from '../posts/ViewItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { getPost } from '../../actions/post';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n  const classes = useStyles();\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, ' ', React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(ViewItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, post.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))))))));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/Users/hvx/Desktop/wyncode/posted/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","PostItem","ViewItem","CommentForm","CommentItem","getPost","makeStyles","Paper","Grid","CardHeader","CardMedia","CardContent","CardActions","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Post","post","loading","match","params","id","classes","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport PostItem from '../posts/PostItem'\nimport ViewItem from '../posts/ViewItem'\nimport CommentForm from '../post/CommentForm'\nimport CommentItem from '../post/CommentItem'\nimport { getPost } from '../../actions/post'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}))\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id)\n  }, [getPost, match.params.id])\n  const classes = useStyles()\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      {' '}\n      <Link to=\"/posts\" className=\"btn\">\n        Back To Posts\n      </Link>\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <Paper className={classes.paper}>\n              <ViewItem post={post} showActions={false} />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Paper className={classes.paper}>\n              <CommentForm postId={post._id} />\n              <div className=\"comments\">\n                {post.comments.map(comment => (\n                  <CommentItem\n                    key={comment._id}\n                    comment={comment}\n                    postId={post._id}\n                  />\n                ))}\n              </div>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </Fragment>\n  )\n}\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  post: state.post\n})\n\nexport default connect(\n  mapStateToProps,\n  { getPost }\n)(Post)\n"]},"metadata":{},"sourceType":"module"}